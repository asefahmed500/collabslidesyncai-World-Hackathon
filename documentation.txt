
# CollabDeck: Feature Documentation

This document provides an overview of the features available in the CollabDeck application for both standard users and platform administrators.

## I. User Features

### 1. Authentication & Account Management

*   **Sign Up:**
    *   Users create an account using email/password or social providers (Google, GitHub).
    *   Email/password signup also creates their first team, making them its owner.
    *   User profile stored in MongoDB. Email verification sent.
*   **Login:**
    *   Email/password or social login (Google, GitHub).
    *   Updates `lastActive` status in MongoDB.
*   **Password Management:**
    *   Forgot Password: Sends reset link.
    *   Change Password: For logged-in users, requires current password.
*   **Profile Updates:**
    *   Update display name and profile picture URL. Changes sync to Firebase Auth and MongoDB.
*   **Account Deletion:**
    *   Users can delete their account. Team owners must transfer ownership or delete the team first.
    *   Removes user from team (MongoDB), deletes MongoDB profile, then deletes from Firebase Auth.
*   **Two-Factor Authentication (2FA):**
    *   UI placeholder for future enhancement.

### 2. Dashboard & Presentation Management

*   **Dashboard Overview:**
    *   Summary of activity, quick access to presentations.
    *   Onboarding for users without a team: create team or accept pending invitations.
    *   User analytics: "Presentations Created", "Total Slides Created".
*   **View Presentations:**
    *   Lists user's presentations (created, shared, team-accessible) from Firestore.
    *   Grid/list views, filtering (All, Mine, Shared/Team, Favorites), sorting (Last Updated, Title, Date Created), search.
*   **Create New Presentation:**
    *   Via `createPresentationAction` Server Action. Adds to Firestore, sets creator as owner. Redirects to editor.
*   **Duplicate Presentation:**
    *   Via `duplicatePresentationAction` Server Action. Creates a copy.
*   **Delete Presentation (Soft Delete):**
    *   Via `deletePresentationAction` Server Action. Marks as `deleted` in Firestore.
*   **Favorite Presentations:**
    *   Via `toggleFavoriteStatusAction` Server Action.
*   **Team Invitations (Dashboard Onboarding):**
    *   Pending invites displayed. Accept/decline via `/api/teams/invitations/respond`.

### 3. Presentation Editor (`/editor/[id]`)

*   **Core Data Storage:** All slide content (elements, styles, positions, comments, speaker notes, background) in Firestore.
*   **Real-time Sync:** `onSnapshot` listener reflects changes instantly. Timestamps converted to JS Dates.
*   **Element Manipulation:**
    *   Add: Text, Image, Shape (Rectangle, Circle, Triangle), Chart (placeholder), Icon (Lucide name).
    *   Modify: Resize, reposition, rotate.
    *   Styling: Font, color, background, alignment, weight, style, decoration, opacity, shape properties (fill, border), icon properties, chart properties. Z-index.
    *   Delete Elements.
*   **Slide Management:**
    *   Add: Blank or from templates (via `TemplateSelectionDialog`).
    *   Delete, Duplicate, Reorder slides.
    *   Slide Background: Solid color, image URL, or gradient (linear/radial).
*   **Toolbar & Panels:**
    *   Editor Toolbar: Tools for adding elements, undo/redo (placeholder), AI, templates, comments, present.
    *   Properties Panel: Contextual properties for selected element or slide.
    *   AI Assistant Panel: Access to AI tools.
    *   Slide Thumbnail List: Manage slides.

### 4. Real-Time Collaboration

*   **Presence Indicators:** Avatars of active collaborators.
*   **Live Cursors:** Real-time mouse cursor positions.
*   **Element Locking:** Selected elements are locked; other users see lock. Locks expire.
*   **Comments:** Add, view, resolve comments on slides. Real-time updates.

### 5. Sharing & Publishing

*   **Share Dialog (`ShareDialog.tsx`):**
    *   Uses `updatePresentationShareSettingsAction` Server Action.
    *   Public Access & Password Protection.
    *   Collaborator Invites: By email, assign roles (editor, viewer). Sends notifications/emails.
    *   Shareable Link & Embed Code.
*   **Access Control:** Based on public status, password, direct grants, team membership, admin override.
*   **Export Options:**
    *   PDF: Via print-to-PDF (`/present/[id]?print=true`).
    *   PPTX: Client-side via `PptxGenJS`.
    *   Images (ZIP): Client-side via `html2canvas`, `jszip` (`/present/[id]?exportAllImages=true`).

### 6. Presentation Viewing Mode (`/present/[id]`)

*   Displays presentation. Keyboard/click navigation.
*   Real-time updates if collaborators are editing.
*   Toggleable speaker notes view. Fullscreen mode.

### 7. Team & Asset Management

*   **Team Creation:** During signup or from dashboard if user has no team.
*   **Team Management (`/dashboard/manage-team`):**
    *   Data fetched via Server Actions (`getTeamDataAction`, `getTeamActivitiesAction`).
    *   Settings & Branding: Update name, logo, colors, fonts via `PUT /api/teams/[teamId]`.
    *   General Settings: Toggle AI features, guest edits.
    *   Member Management: Invite, change roles, remove members via API routes.
*   **Team Asset Library (`/dashboard/assets`):**
    *   Asset metadata in Firestore, files in Firebase Storage.
    *   Upload images (PNG, JPG, GIF, WEBP; max 5MB) via `AssetUploadDropzone` and `createAssetMetadataAction` Server Action. Video/audio/PDF planned.
    *   View, delete assets (via `deleteAssetAction` Server Action).
*   **Team Activity Logs:** Viewable in Manage Team page, stored in MongoDB.

### 8. Notifications & Communication

*   **In-App Notifications (`NotificationBell`):**
    *   Real-time updates from Firestore. Unread count.
    *   Lists team invites, shares, role changes, new comments.
    *   Mark all as read. Actionable team invites use API.
*   **Email Notifications (Placeholder):**
    *   Basic email sending via `src/lib/emailService.ts` (logs to console).

### 9. AI-Powered Assistance (Genkit - via AI Assistant Panel)

*   **Design Suggestions:** Layouts, color schemes, spacing, fonts.
*   **Smart Tips (Presentation Level):** Flow, clarity, content gaps.
*   **Text Improvement:** Grammar, clarity, professionalism, conciseness.
*   **Content Generation:** Rewrite, summarize, bullet points.
*   **Tone Adjustment:** Formal, casual, enthusiastic, neutral.
*   **Speaker Notes Generation:** For current slide.
*   **Icon Generation:** Image (data URI) from text.
*   **Chart Suggestions:** Chart types and data mapping from text.
*   **Background Generation:** Image for slide from text.

### 10. Support & Help (`/dashboard/help`)

*   **FAQ Section.**
*   **Tutorials (Placeholder).**
*   **Contact Methods (Placeholder).**
*   **Feedback/Bug Reporting:** `FeedbackDialog` submits to Firestore via `submitFeedbackAction` Server Action.
*   **AI Chatbot Assistant (`AIChatbotWidget`):** Uses Genkit flow.
*   **Live Chat (Placeholder).**

### 11. Subscription Management (Stripe)
*   Users can upgrade to Premium plans (Monthly/Yearly) via `PricingCardClient`.
*   Checkout sessions handled by `/api/stripe/checkout-sessions`.
*   Users can manage their active subscriptions via Stripe Billing Portal, accessed through `/api/stripe/create-portal-link`.
*   Stripe webhooks (`/api/stripe/webhooks`) update user's premium status and subscription details in MongoDB.

## II. Admin Features (`/admin` dashboard)

Platform Admins (`isAppAdmin: true` in MongoDB) access this.

### 1. Admin Dashboard & Layout

*   Access control via `/admin/layout.tsx` verifies `currentUser.isAppAdmin`.
*   Overview page with links to admin sections. Sidebar navigation.

### 2. User Management (`/admin/users`)

*   View all users from MongoDB.
*   Actions via API routes (requiring admin actor verification):
    *   **Enable/Disable Account:** Toggles status in Firebase Auth & MongoDB.
    *   **Promote/Demote Platform Admin:** Toggles `isAppAdmin` in MongoDB. Admins cannot demote themselves.
    *   **Reset Password:** Sends reset email via Firebase Admin SDK.
    *   **Delete User:** Deletes from Firebase Auth & MongoDB. Blocks if user owns teams.

### 3. Team Oversight (`/admin/teams`)

*   View all teams from MongoDB.
*   **Delete Team (via API route):**
    *   Verifies admin actor. Deletes team from MongoDB.
    *   Updates members' `teamId`/`role` in MongoDB.
    *   Clears `teamId` from associated presentations in Firestore. Logs activity.

### 4. Presentation Oversight (`/admin/presentations`)

*   View all presentations from Firestore (can filter by soft-deleted).
*   Actions via API routes (requiring admin actor):
    *   **Soft Delete/Restore.**
    *   **Permanent Delete.**
    *   **Change Moderation Status:** Set to `active`, `under_review`, `taken_down`. Includes moderation notes.

### 5. Content Moderation Queue (`/admin/moderation`)

*   Displays presentations with `moderationStatus: 'under_review'`.
*   Admins approve (to `active`) or take down presentations.

### 6. User Feedback Management (`/admin/feedback`)

*   View all feedback submissions from Firestore.
*   Update status of feedback items (new, seen, in_progress, resolved, wont_fix).

### 7. System Management (Placeholders)

Placeholder UI for future enhancements:
*   **Billing Management (`/admin/billing`):** Oversee Stripe subscriptions, plans.
*   **Security & Compliance (`/admin/security`):** Logs, audit trails, data privacy.
*   **AI Analytics (`/admin/stats`):** Monitor AI usage, token consumption.
*   **Global Activity Feed (`/admin/activities`):** System-wide event log.
*   **Platform Settings (`/admin/settings`):** Global defaults, legal content, email templates, 3rd-party integrations.
```